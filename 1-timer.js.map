{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport iziToast from \"izitoast\";\n\nconst datetimePicker = document.getElementById(\"datetime-picker\");\nconst startButton = document.getElementById(\"start-btn\");\nlet userSelectedDate = null;\nlet countdownInterval;\n\nflatpickr(datetimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    \n    if (userSelectedDate && userSelectedDate.getTime() <= new Date().getTime()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n        startButton.disabled = true;\n        startButton.style.backgroundColor = \"#cfcfcf\";\n    } else {\n        startButton.disabled = false;\n        startButton.style.backgroundColor = \" #4e75ff\";\n        startButton.style.color = \"#ffff\"\n    }\n  },\n});\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer() {\n  const timeLeft = userSelectedDate - new Date();\n  const { days, hours, minutes, seconds } = convertMs(timeLeft);\n\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\nÑ€\n  if (timeLeft <= 0) {\n    clearInterval(countdownInterval);\n    startButton.disabled = false;\n    datetimePicker.disabled = false;\n    iziToast.success({\n      title: 'Done',\n      message: 'The timer has finished',\n      position: 'topRight',\n    });\n  }\n}\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  datetimePicker.disabled = true;\n  startButton.style.backgroundColor = \"\";\n  countdownInterval = setInterval(updateTimer, 1000);\n});\n\n"],"names":["datetimePicker","startButton","userSelectedDate","countdownInterval","flatpickr","selectedDates","iziToast","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimer","timeLeft"],"mappings":"sFAGA,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,eAAe,WAAW,EACvD,IAAIC,EAAmB,KACnBC,EAEJC,EAAUJ,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQK,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAE9BH,GAAoBA,EAAiB,QAAO,GAAM,IAAI,KAAI,EAAG,WAC/DI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACCL,EAAY,SAAW,GACvBA,EAAY,MAAM,gBAAkB,YAEpCA,EAAY,SAAW,GACvBA,EAAY,MAAM,gBAAkB,WACpCA,EAAY,MAAM,MAAQ,QAE/B,CACH,CAAC,EAED,SAASM,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,GAAc,CACrB,MAAMC,EAAWd,EAAmB,IAAI,KAClC,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUO,CAAQ,EAE5D,SAAS,cAAc,aAAa,EAAE,YAAcT,EAAeI,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcJ,EAAeK,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcL,EAAeM,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcN,EAAeO,CAAO,EAC/E,EACME,GAAY,IACd,cAAcb,CAAiB,EAC/BF,EAAY,SAAW,GACvBD,EAAe,SAAW,GAC1BM,EAAS,QAAQ,CACf,MAAO,OACP,QAAS,yBACT,SAAU,UAChB,CAAK,EAEL,CAEAL,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBD,EAAe,SAAW,GAC1BC,EAAY,MAAM,gBAAkB,GACpCE,EAAoB,YAAYY,EAAa,GAAI,CACnD,CAAC"}